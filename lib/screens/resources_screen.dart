import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:provider/provider.dart';

import '../providers/resource_provider.dart';

class ResourcesScreen extends StatelessWidget {
  const ResourcesScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final prov = context.watch<ResourceProvider>();
    final r = prov.data;

    final utilC = TextEditingController(
      text: r.utilities == 0 ? '' : _fmt(r.utilities),
    );
    final salC = TextEditingController(
      text: r.salary == 0 ? '' : _fmt(r.salary),
    );

    void showMsg(String m) {
      ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(m)));
    }

    return Scaffold(
      appBar: AppBar(
        title: const Text('–†–µ—Å—É—Ä—Å—ã'),
        actions: [
          IconButton(
            tooltip: '–ü–æ–¥—Å–∫–∞–∑–∫–∞',
            icon: const Icon(Icons.help_outline),
            onPressed: () => _showHelp(
              context,
              title: 'üìå –†–µ—Å—É—Ä—Å—ã',
              body: '''
‚Ä¢–†–µ—Å—É—Ä—Å—ã –¥–æ–±–∞–≤–ª—è—é—Ç –∫ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ —á–µ—Å—Ç–Ω—É—é –¥–æ–ª—é –∑–∞—Ç—Ä–∞—Ç –Ω–∞ —Ç—Ä—É–¥ –∏ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã

‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —Å—Ä–µ–¥–Ω–∏–º –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–º –∑–∞—Ç—Ä–∞—Ç–∞–º –≤ –º–µ—Å—è—Ü  
‚Ä¢ –î–æ–±–∞–≤–ª—è–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∂–µ–ª–∞–µ–º–æ–π –∑–∞—Ä–ø–ª–∞—Ç–µ –≤ –º–µ—Å—è—Ü  

‚Ä¢ –ú–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö —Ü–∏—Ñ—Ä ‚Äî –ø–æ—Ç–æ–º –æ—Ç–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç–µ 
‚Ä¢ –ï—Å–ª–∏ –Ω–µ —É—á–∏—Ç—ã–≤–∞—Ç—å –≤—Ä–µ–º—è –≤ —Ä–µ—Ü–µ–ø—Ç–µ ‚Äî —á–∞—Å—Ç—å –∑–∞—Ç—Ä–∞—Ç –æ—Å—Ç–∞–Ω–µ—Ç—Å—è ¬´–∑–∞ –∫–∞–¥—Ä–æ–º¬ª
''',
            ),
          ),
        ],
      ),
      body: Padding(
        padding: const EdgeInsets.all(16),
        child: Column(
          children: [
            TextField(
              controller: utilC,
              keyboardType: const TextInputType.numberWithOptions(decimal: true),
              inputFormatters: [
                FilteringTextInputFormatter.allow(RegExp(r'[0-9.,]')),
              ],
              decoration: const InputDecoration(
                labelText: '–ö–æ–º–º—É–Ω–∞–ª–∫–∞ (‚ÇΩ/–º–µ—Å—è—Ü)',
              ),
            ),
            const SizedBox(height: 12),
            TextField(
              controller: salC,
              keyboardType: const TextInputType.numberWithOptions(decimal: true),
              inputFormatters: [
                FilteringTextInputFormatter.allow(RegExp(r'[0-9.,]')),
              ],
              decoration: const InputDecoration(
                labelText: '–ó–∞—Ä–ø–ª–∞—Ç–∞ (‚ÇΩ/–º–µ—Å—è—Ü)',
              ),
            ),
            const SizedBox(height: 24),
            Row(
              children: [
                Expanded(
                  child: ElevatedButton(
                    onPressed: () {
                      final utilities =
                          double.tryParse(utilC.text.replaceAll(',', '.')) ?? 0;
                      final salary =
                          double.tryParse(salC.text.replaceAll(',', '.')) ?? 0;

                      if (utilities < 0) {
                        showMsg('–ö–æ–º–º—É–Ω–∞–ª–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π');
                        return;
                      }
                      if (salary < 0) {
                        showMsg('–ó–∞—Ä–ø–ª–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π');
                        return;
                      }

                      prov.setBoth(utilities: utilities, salary: salary);
                      showMsg('–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ');
                    },
                    child: const Text('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'),
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }

  static String _fmt(double v) =>
      v == v.roundToDouble() ? v.toInt().toString() : v.toStringAsFixed(2);

  /// –¢–æ—Ç –∂–µ —Å—Ç–∏–ª—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞, —á—Ç–æ –∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ ¬´–£–ø–∞–∫–æ–≤–∫–∞¬ª.
  void _showHelp(BuildContext context, {required String title, required String body}) {
    showModalBottomSheet(
      context: context,
      useSafeArea: true,
      isScrollControlled: true,
      shape: const RoundedRectangleBorder(
        borderRadius: BorderRadius.vertical(top: Radius.circular(18)),
      ),
      builder: (_) => Padding(
        padding: const EdgeInsets.fromLTRB(16, 12, 16, 16),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            Container(
              width: 44,
              height: 4,
              decoration: BoxDecoration(
                color: Theme.of(context).dividerColor,
                borderRadius: BorderRadius.circular(999),
              ),
            ),
            const SizedBox(height: 10),
            Text(title, style: Theme.of(context).textTheme.titleMedium),
            const SizedBox(height: 10),
            Align(
              alignment: Alignment.centerLeft,
              child: Text(body, style: Theme.of(context).textTheme.bodyMedium),
            ),
            const SizedBox(height: 10),
            Align(
              alignment: Alignment.centerRight,
              child: TextButton(
                onPressed: () => Navigator.pop(context),
                child: const Text('–ü–æ–Ω—è—Ç–Ω–æ'),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
